module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateChat {
  count: Int!
}

type AggregateChatRoom {
  count: Int!
}

type AggregateGenerationVideo {
  count: Int!
}

type AggregateInformation {
  count: Int!
}

type AggregateMainView {
  count: Int!
}

type AggregatePlayListBox {
  count: Int!
}

type AggregateProgramBox {
  count: Int!
}

type AggregateSingerBox {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Chat {
  id: ID!
  fcmToken: String
  nickName: String!
  avatar: String
  text: String!
  commentTargetId: String
  commentText: String
  commentNickName: String
  videoId: String
  thumbnail: String
  title: String
  singer: String
  duration: String
  delete: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ChatConnection {
  pageInfo: PageInfo!
  edges: [ChatEdge]!
  aggregate: AggregateChat!
}

input ChatCreateInput {
  id: ID
  fcmToken: String
  nickName: String!
  avatar: String
  text: String!
  commentTargetId: String
  commentText: String
  commentNickName: String
  videoId: String
  thumbnail: String
  title: String
  singer: String
  duration: String
  delete: Boolean
}

type ChatEdge {
  node: Chat!
  cursor: String!
}

enum ChatOrderByInput {
  id_ASC
  id_DESC
  fcmToken_ASC
  fcmToken_DESC
  nickName_ASC
  nickName_DESC
  avatar_ASC
  avatar_DESC
  text_ASC
  text_DESC
  commentTargetId_ASC
  commentTargetId_DESC
  commentText_ASC
  commentText_DESC
  commentNickName_ASC
  commentNickName_DESC
  videoId_ASC
  videoId_DESC
  thumbnail_ASC
  thumbnail_DESC
  title_ASC
  title_DESC
  singer_ASC
  singer_DESC
  duration_ASC
  duration_DESC
  delete_ASC
  delete_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ChatPreviousValues {
  id: ID!
  fcmToken: String
  nickName: String!
  avatar: String
  text: String!
  commentTargetId: String
  commentText: String
  commentNickName: String
  videoId: String
  thumbnail: String
  title: String
  singer: String
  duration: String
  delete: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ChatRoom {
  id: ID!
  numOfVisitor: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ChatRoomConnection {
  pageInfo: PageInfo!
  edges: [ChatRoomEdge]!
  aggregate: AggregateChatRoom!
}

input ChatRoomCreateInput {
  id: ID
  numOfVisitor: Int
}

type ChatRoomEdge {
  node: ChatRoom!
  cursor: String!
}

enum ChatRoomOrderByInput {
  id_ASC
  id_DESC
  numOfVisitor_ASC
  numOfVisitor_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ChatRoomPreviousValues {
  id: ID!
  numOfVisitor: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ChatRoomSubscriptionPayload {
  mutation: MutationType!
  node: ChatRoom
  updatedFields: [String!]
  previousValues: ChatRoomPreviousValues
}

input ChatRoomSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChatRoomWhereInput
  AND: [ChatRoomSubscriptionWhereInput!]
  OR: [ChatRoomSubscriptionWhereInput!]
  NOT: [ChatRoomSubscriptionWhereInput!]
}

input ChatRoomUpdateInput {
  numOfVisitor: Int
}

input ChatRoomUpdateManyMutationInput {
  numOfVisitor: Int
}

input ChatRoomWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  numOfVisitor: Int
  numOfVisitor_not: Int
  numOfVisitor_in: [Int!]
  numOfVisitor_not_in: [Int!]
  numOfVisitor_lt: Int
  numOfVisitor_lte: Int
  numOfVisitor_gt: Int
  numOfVisitor_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ChatRoomWhereInput!]
  OR: [ChatRoomWhereInput!]
  NOT: [ChatRoomWhereInput!]
}

input ChatRoomWhereUniqueInput {
  id: ID
}

type ChatSubscriptionPayload {
  mutation: MutationType!
  node: Chat
  updatedFields: [String!]
  previousValues: ChatPreviousValues
}

input ChatSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChatWhereInput
  AND: [ChatSubscriptionWhereInput!]
  OR: [ChatSubscriptionWhereInput!]
  NOT: [ChatSubscriptionWhereInput!]
}

input ChatUpdateInput {
  fcmToken: String
  nickName: String
  avatar: String
  text: String
  commentTargetId: String
  commentText: String
  commentNickName: String
  videoId: String
  thumbnail: String
  title: String
  singer: String
  duration: String
  delete: Boolean
}

input ChatUpdateManyMutationInput {
  fcmToken: String
  nickName: String
  avatar: String
  text: String
  commentTargetId: String
  commentText: String
  commentNickName: String
  videoId: String
  thumbnail: String
  title: String
  singer: String
  duration: String
  delete: Boolean
}

input ChatWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  fcmToken: String
  fcmToken_not: String
  fcmToken_in: [String!]
  fcmToken_not_in: [String!]
  fcmToken_lt: String
  fcmToken_lte: String
  fcmToken_gt: String
  fcmToken_gte: String
  fcmToken_contains: String
  fcmToken_not_contains: String
  fcmToken_starts_with: String
  fcmToken_not_starts_with: String
  fcmToken_ends_with: String
  fcmToken_not_ends_with: String
  nickName: String
  nickName_not: String
  nickName_in: [String!]
  nickName_not_in: [String!]
  nickName_lt: String
  nickName_lte: String
  nickName_gt: String
  nickName_gte: String
  nickName_contains: String
  nickName_not_contains: String
  nickName_starts_with: String
  nickName_not_starts_with: String
  nickName_ends_with: String
  nickName_not_ends_with: String
  avatar: String
  avatar_not: String
  avatar_in: [String!]
  avatar_not_in: [String!]
  avatar_lt: String
  avatar_lte: String
  avatar_gt: String
  avatar_gte: String
  avatar_contains: String
  avatar_not_contains: String
  avatar_starts_with: String
  avatar_not_starts_with: String
  avatar_ends_with: String
  avatar_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  commentTargetId: String
  commentTargetId_not: String
  commentTargetId_in: [String!]
  commentTargetId_not_in: [String!]
  commentTargetId_lt: String
  commentTargetId_lte: String
  commentTargetId_gt: String
  commentTargetId_gte: String
  commentTargetId_contains: String
  commentTargetId_not_contains: String
  commentTargetId_starts_with: String
  commentTargetId_not_starts_with: String
  commentTargetId_ends_with: String
  commentTargetId_not_ends_with: String
  commentText: String
  commentText_not: String
  commentText_in: [String!]
  commentText_not_in: [String!]
  commentText_lt: String
  commentText_lte: String
  commentText_gt: String
  commentText_gte: String
  commentText_contains: String
  commentText_not_contains: String
  commentText_starts_with: String
  commentText_not_starts_with: String
  commentText_ends_with: String
  commentText_not_ends_with: String
  commentNickName: String
  commentNickName_not: String
  commentNickName_in: [String!]
  commentNickName_not_in: [String!]
  commentNickName_lt: String
  commentNickName_lte: String
  commentNickName_gt: String
  commentNickName_gte: String
  commentNickName_contains: String
  commentNickName_not_contains: String
  commentNickName_starts_with: String
  commentNickName_not_starts_with: String
  commentNickName_ends_with: String
  commentNickName_not_ends_with: String
  videoId: String
  videoId_not: String
  videoId_in: [String!]
  videoId_not_in: [String!]
  videoId_lt: String
  videoId_lte: String
  videoId_gt: String
  videoId_gte: String
  videoId_contains: String
  videoId_not_contains: String
  videoId_starts_with: String
  videoId_not_starts_with: String
  videoId_ends_with: String
  videoId_not_ends_with: String
  thumbnail: String
  thumbnail_not: String
  thumbnail_in: [String!]
  thumbnail_not_in: [String!]
  thumbnail_lt: String
  thumbnail_lte: String
  thumbnail_gt: String
  thumbnail_gte: String
  thumbnail_contains: String
  thumbnail_not_contains: String
  thumbnail_starts_with: String
  thumbnail_not_starts_with: String
  thumbnail_ends_with: String
  thumbnail_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  singer: String
  singer_not: String
  singer_in: [String!]
  singer_not_in: [String!]
  singer_lt: String
  singer_lte: String
  singer_gt: String
  singer_gte: String
  singer_contains: String
  singer_not_contains: String
  singer_starts_with: String
  singer_not_starts_with: String
  singer_ends_with: String
  singer_not_ends_with: String
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  delete: Boolean
  delete_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ChatWhereInput!]
  OR: [ChatWhereInput!]
  NOT: [ChatWhereInput!]
}

input ChatWhereUniqueInput {
  id: ID
}

scalar DateTime

type GenerationVideo {
  id: ID!
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GenerationVideoConnection {
  pageInfo: PageInfo!
  edges: [GenerationVideoEdge]!
  aggregate: AggregateGenerationVideo!
}

input GenerationVideoCreateInput {
  id: ID
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
}

type GenerationVideoEdge {
  node: GenerationVideo!
  cursor: String!
}

enum GenerationVideoOrderByInput {
  id_ASC
  id_DESC
  division_ASC
  division_DESC
  program_ASC
  program_DESC
  duration_ASC
  duration_DESC
  singer_ASC
  singer_DESC
  thumbnail_ASC
  thumbnail_DESC
  title_ASC
  title_DESC
  videoId_ASC
  videoId_DESC
  ranking_ASC
  ranking_DESC
  publishedAt_ASC
  publishedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GenerationVideoPreviousValues {
  id: ID!
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GenerationVideoSubscriptionPayload {
  mutation: MutationType!
  node: GenerationVideo
  updatedFields: [String!]
  previousValues: GenerationVideoPreviousValues
}

input GenerationVideoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GenerationVideoWhereInput
  AND: [GenerationVideoSubscriptionWhereInput!]
  OR: [GenerationVideoSubscriptionWhereInput!]
  NOT: [GenerationVideoSubscriptionWhereInput!]
}

input GenerationVideoUpdateInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
}

input GenerationVideoUpdateManyMutationInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
}

input GenerationVideoWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  division: String
  division_not: String
  division_in: [String!]
  division_not_in: [String!]
  division_lt: String
  division_lte: String
  division_gt: String
  division_gte: String
  division_contains: String
  division_not_contains: String
  division_starts_with: String
  division_not_starts_with: String
  division_ends_with: String
  division_not_ends_with: String
  program: String
  program_not: String
  program_in: [String!]
  program_not_in: [String!]
  program_lt: String
  program_lte: String
  program_gt: String
  program_gte: String
  program_contains: String
  program_not_contains: String
  program_starts_with: String
  program_not_starts_with: String
  program_ends_with: String
  program_not_ends_with: String
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  singer: String
  singer_not: String
  singer_in: [String!]
  singer_not_in: [String!]
  singer_lt: String
  singer_lte: String
  singer_gt: String
  singer_gte: String
  singer_contains: String
  singer_not_contains: String
  singer_starts_with: String
  singer_not_starts_with: String
  singer_ends_with: String
  singer_not_ends_with: String
  thumbnail: String
  thumbnail_not: String
  thumbnail_in: [String!]
  thumbnail_not_in: [String!]
  thumbnail_lt: String
  thumbnail_lte: String
  thumbnail_gt: String
  thumbnail_gte: String
  thumbnail_contains: String
  thumbnail_not_contains: String
  thumbnail_starts_with: String
  thumbnail_not_starts_with: String
  thumbnail_ends_with: String
  thumbnail_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  videoId: String
  videoId_not: String
  videoId_in: [String!]
  videoId_not_in: [String!]
  videoId_lt: String
  videoId_lte: String
  videoId_gt: String
  videoId_gte: String
  videoId_contains: String
  videoId_not_contains: String
  videoId_starts_with: String
  videoId_not_starts_with: String
  videoId_ends_with: String
  videoId_not_ends_with: String
  ranking: Int
  ranking_not: Int
  ranking_in: [Int!]
  ranking_not_in: [Int!]
  ranking_lt: Int
  ranking_lte: Int
  ranking_gt: Int
  ranking_gte: Int
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime!]
  publishedAt_not_in: [DateTime!]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [GenerationVideoWhereInput!]
  OR: [GenerationVideoWhereInput!]
  NOT: [GenerationVideoWhereInput!]
}

input GenerationVideoWhereUniqueInput {
  id: ID
}

type Information {
  id: ID!
}

type InformationConnection {
  pageInfo: PageInfo!
  edges: [InformationEdge]!
  aggregate: AggregateInformation!
}

input InformationCreateInput {
  id: ID
}

type InformationEdge {
  node: Information!
  cursor: String!
}

enum InformationOrderByInput {
  id_ASC
  id_DESC
}

type InformationPreviousValues {
  id: ID!
}

type InformationSubscriptionPayload {
  mutation: MutationType!
  node: Information
  updatedFields: [String!]
  previousValues: InformationPreviousValues
}

input InformationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InformationWhereInput
  AND: [InformationSubscriptionWhereInput!]
  OR: [InformationSubscriptionWhereInput!]
  NOT: [InformationSubscriptionWhereInput!]
}

input InformationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  AND: [InformationWhereInput!]
  OR: [InformationWhereInput!]
  NOT: [InformationWhereInput!]
}

input InformationWhereUniqueInput {
  id: ID
}

scalar Long

type MainView {
  id: ID!
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MainViewConnection {
  pageInfo: PageInfo!
  edges: [MainViewEdge]!
  aggregate: AggregateMainView!
}

input MainViewCreateInput {
  id: ID
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
}

type MainViewEdge {
  node: MainView!
  cursor: String!
}

enum MainViewOrderByInput {
  id_ASC
  id_DESC
  division_ASC
  division_DESC
  program_ASC
  program_DESC
  duration_ASC
  duration_DESC
  singer_ASC
  singer_DESC
  thumbnail_ASC
  thumbnail_DESC
  title_ASC
  title_DESC
  videoId_ASC
  videoId_DESC
  ranking_ASC
  ranking_DESC
  publishedAt_ASC
  publishedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MainViewPreviousValues {
  id: ID!
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MainViewSubscriptionPayload {
  mutation: MutationType!
  node: MainView
  updatedFields: [String!]
  previousValues: MainViewPreviousValues
}

input MainViewSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MainViewWhereInput
  AND: [MainViewSubscriptionWhereInput!]
  OR: [MainViewSubscriptionWhereInput!]
  NOT: [MainViewSubscriptionWhereInput!]
}

input MainViewUpdateInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
}

input MainViewUpdateManyMutationInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  ranking: Int
  publishedAt: DateTime
}

input MainViewWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  division: String
  division_not: String
  division_in: [String!]
  division_not_in: [String!]
  division_lt: String
  division_lte: String
  division_gt: String
  division_gte: String
  division_contains: String
  division_not_contains: String
  division_starts_with: String
  division_not_starts_with: String
  division_ends_with: String
  division_not_ends_with: String
  program: String
  program_not: String
  program_in: [String!]
  program_not_in: [String!]
  program_lt: String
  program_lte: String
  program_gt: String
  program_gte: String
  program_contains: String
  program_not_contains: String
  program_starts_with: String
  program_not_starts_with: String
  program_ends_with: String
  program_not_ends_with: String
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  singer: String
  singer_not: String
  singer_in: [String!]
  singer_not_in: [String!]
  singer_lt: String
  singer_lte: String
  singer_gt: String
  singer_gte: String
  singer_contains: String
  singer_not_contains: String
  singer_starts_with: String
  singer_not_starts_with: String
  singer_ends_with: String
  singer_not_ends_with: String
  thumbnail: String
  thumbnail_not: String
  thumbnail_in: [String!]
  thumbnail_not_in: [String!]
  thumbnail_lt: String
  thumbnail_lte: String
  thumbnail_gt: String
  thumbnail_gte: String
  thumbnail_contains: String
  thumbnail_not_contains: String
  thumbnail_starts_with: String
  thumbnail_not_starts_with: String
  thumbnail_ends_with: String
  thumbnail_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  videoId: String
  videoId_not: String
  videoId_in: [String!]
  videoId_not_in: [String!]
  videoId_lt: String
  videoId_lte: String
  videoId_gt: String
  videoId_gte: String
  videoId_contains: String
  videoId_not_contains: String
  videoId_starts_with: String
  videoId_not_starts_with: String
  videoId_ends_with: String
  videoId_not_ends_with: String
  ranking: Int
  ranking_not: Int
  ranking_in: [Int!]
  ranking_not_in: [Int!]
  ranking_lt: Int
  ranking_lte: Int
  ranking_gt: Int
  ranking_gte: Int
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime!]
  publishedAt_not_in: [DateTime!]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [MainViewWhereInput!]
  OR: [MainViewWhereInput!]
  NOT: [MainViewWhereInput!]
}

input MainViewWhereUniqueInput {
  id: ID
}

type Mutation {
  createChat(data: ChatCreateInput!): Chat!
  updateChat(data: ChatUpdateInput!, where: ChatWhereUniqueInput!): Chat
  updateManyChats(data: ChatUpdateManyMutationInput!, where: ChatWhereInput): BatchPayload!
  upsertChat(where: ChatWhereUniqueInput!, create: ChatCreateInput!, update: ChatUpdateInput!): Chat!
  deleteChat(where: ChatWhereUniqueInput!): Chat
  deleteManyChats(where: ChatWhereInput): BatchPayload!
  createChatRoom(data: ChatRoomCreateInput!): ChatRoom!
  updateChatRoom(data: ChatRoomUpdateInput!, where: ChatRoomWhereUniqueInput!): ChatRoom
  updateManyChatRooms(data: ChatRoomUpdateManyMutationInput!, where: ChatRoomWhereInput): BatchPayload!
  upsertChatRoom(where: ChatRoomWhereUniqueInput!, create: ChatRoomCreateInput!, update: ChatRoomUpdateInput!): ChatRoom!
  deleteChatRoom(where: ChatRoomWhereUniqueInput!): ChatRoom
  deleteManyChatRooms(where: ChatRoomWhereInput): BatchPayload!
  createGenerationVideo(data: GenerationVideoCreateInput!): GenerationVideo!
  updateGenerationVideo(data: GenerationVideoUpdateInput!, where: GenerationVideoWhereUniqueInput!): GenerationVideo
  updateManyGenerationVideos(data: GenerationVideoUpdateManyMutationInput!, where: GenerationVideoWhereInput): BatchPayload!
  upsertGenerationVideo(where: GenerationVideoWhereUniqueInput!, create: GenerationVideoCreateInput!, update: GenerationVideoUpdateInput!): GenerationVideo!
  deleteGenerationVideo(where: GenerationVideoWhereUniqueInput!): GenerationVideo
  deleteManyGenerationVideos(where: GenerationVideoWhereInput): BatchPayload!
  createInformation(data: InformationCreateInput!): Information!
  deleteInformation(where: InformationWhereUniqueInput!): Information
  deleteManyInformations(where: InformationWhereInput): BatchPayload!
  createMainView(data: MainViewCreateInput!): MainView!
  updateMainView(data: MainViewUpdateInput!, where: MainViewWhereUniqueInput!): MainView
  updateManyMainViews(data: MainViewUpdateManyMutationInput!, where: MainViewWhereInput): BatchPayload!
  upsertMainView(where: MainViewWhereUniqueInput!, create: MainViewCreateInput!, update: MainViewUpdateInput!): MainView!
  deleteMainView(where: MainViewWhereUniqueInput!): MainView
  deleteManyMainViews(where: MainViewWhereInput): BatchPayload!
  createPlayListBox(data: PlayListBoxCreateInput!): PlayListBox!
  updatePlayListBox(data: PlayListBoxUpdateInput!, where: PlayListBoxWhereUniqueInput!): PlayListBox
  updateManyPlayListBoxes(data: PlayListBoxUpdateManyMutationInput!, where: PlayListBoxWhereInput): BatchPayload!
  upsertPlayListBox(where: PlayListBoxWhereUniqueInput!, create: PlayListBoxCreateInput!, update: PlayListBoxUpdateInput!): PlayListBox!
  deletePlayListBox(where: PlayListBoxWhereUniqueInput!): PlayListBox
  deleteManyPlayListBoxes(where: PlayListBoxWhereInput): BatchPayload!
  createProgramBox(data: ProgramBoxCreateInput!): ProgramBox!
  updateProgramBox(data: ProgramBoxUpdateInput!, where: ProgramBoxWhereUniqueInput!): ProgramBox
  updateManyProgramBoxes(data: ProgramBoxUpdateManyMutationInput!, where: ProgramBoxWhereInput): BatchPayload!
  upsertProgramBox(where: ProgramBoxWhereUniqueInput!, create: ProgramBoxCreateInput!, update: ProgramBoxUpdateInput!): ProgramBox!
  deleteProgramBox(where: ProgramBoxWhereUniqueInput!): ProgramBox
  deleteManyProgramBoxes(where: ProgramBoxWhereInput): BatchPayload!
  createSingerBox(data: SingerBoxCreateInput!): SingerBox!
  updateSingerBox(data: SingerBoxUpdateInput!, where: SingerBoxWhereUniqueInput!): SingerBox
  updateManySingerBoxes(data: SingerBoxUpdateManyMutationInput!, where: SingerBoxWhereInput): BatchPayload!
  upsertSingerBox(where: SingerBoxWhereUniqueInput!, create: SingerBoxCreateInput!, update: SingerBoxUpdateInput!): SingerBox!
  deleteSingerBox(where: SingerBoxWhereUniqueInput!): SingerBox
  deleteManySingerBoxes(where: SingerBoxWhereInput): BatchPayload!
  createVideo(data: VideoCreateInput!): Video!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PlayListBox {
  id: ID!
  playListName: String!
  imageUrl: String!
  published: Boolean
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
}

type PlayListBoxConnection {
  pageInfo: PageInfo!
  edges: [PlayListBoxEdge]!
  aggregate: AggregatePlayListBox!
}

input PlayListBoxCreateInput {
  id: ID
  playListName: String!
  imageUrl: String!
  published: Boolean
  videos: VideoCreateManyWithoutPlayListBoxesInput
}

input PlayListBoxCreateManyWithoutVideosInput {
  create: [PlayListBoxCreateWithoutVideosInput!]
  connect: [PlayListBoxWhereUniqueInput!]
}

input PlayListBoxCreateWithoutVideosInput {
  id: ID
  playListName: String!
  imageUrl: String!
  published: Boolean
}

type PlayListBoxEdge {
  node: PlayListBox!
  cursor: String!
}

enum PlayListBoxOrderByInput {
  id_ASC
  id_DESC
  playListName_ASC
  playListName_DESC
  imageUrl_ASC
  imageUrl_DESC
  published_ASC
  published_DESC
}

type PlayListBoxPreviousValues {
  id: ID!
  playListName: String!
  imageUrl: String!
  published: Boolean
}

input PlayListBoxScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  playListName: String
  playListName_not: String
  playListName_in: [String!]
  playListName_not_in: [String!]
  playListName_lt: String
  playListName_lte: String
  playListName_gt: String
  playListName_gte: String
  playListName_contains: String
  playListName_not_contains: String
  playListName_starts_with: String
  playListName_not_starts_with: String
  playListName_ends_with: String
  playListName_not_ends_with: String
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  published: Boolean
  published_not: Boolean
  AND: [PlayListBoxScalarWhereInput!]
  OR: [PlayListBoxScalarWhereInput!]
  NOT: [PlayListBoxScalarWhereInput!]
}

type PlayListBoxSubscriptionPayload {
  mutation: MutationType!
  node: PlayListBox
  updatedFields: [String!]
  previousValues: PlayListBoxPreviousValues
}

input PlayListBoxSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PlayListBoxWhereInput
  AND: [PlayListBoxSubscriptionWhereInput!]
  OR: [PlayListBoxSubscriptionWhereInput!]
  NOT: [PlayListBoxSubscriptionWhereInput!]
}

input PlayListBoxUpdateInput {
  playListName: String
  imageUrl: String
  published: Boolean
  videos: VideoUpdateManyWithoutPlayListBoxesInput
}

input PlayListBoxUpdateManyDataInput {
  playListName: String
  imageUrl: String
  published: Boolean
}

input PlayListBoxUpdateManyMutationInput {
  playListName: String
  imageUrl: String
  published: Boolean
}

input PlayListBoxUpdateManyWithoutVideosInput {
  create: [PlayListBoxCreateWithoutVideosInput!]
  delete: [PlayListBoxWhereUniqueInput!]
  connect: [PlayListBoxWhereUniqueInput!]
  set: [PlayListBoxWhereUniqueInput!]
  disconnect: [PlayListBoxWhereUniqueInput!]
  update: [PlayListBoxUpdateWithWhereUniqueWithoutVideosInput!]
  upsert: [PlayListBoxUpsertWithWhereUniqueWithoutVideosInput!]
  deleteMany: [PlayListBoxScalarWhereInput!]
  updateMany: [PlayListBoxUpdateManyWithWhereNestedInput!]
}

input PlayListBoxUpdateManyWithWhereNestedInput {
  where: PlayListBoxScalarWhereInput!
  data: PlayListBoxUpdateManyDataInput!
}

input PlayListBoxUpdateWithoutVideosDataInput {
  playListName: String
  imageUrl: String
  published: Boolean
}

input PlayListBoxUpdateWithWhereUniqueWithoutVideosInput {
  where: PlayListBoxWhereUniqueInput!
  data: PlayListBoxUpdateWithoutVideosDataInput!
}

input PlayListBoxUpsertWithWhereUniqueWithoutVideosInput {
  where: PlayListBoxWhereUniqueInput!
  update: PlayListBoxUpdateWithoutVideosDataInput!
  create: PlayListBoxCreateWithoutVideosInput!
}

input PlayListBoxWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  playListName: String
  playListName_not: String
  playListName_in: [String!]
  playListName_not_in: [String!]
  playListName_lt: String
  playListName_lte: String
  playListName_gt: String
  playListName_gte: String
  playListName_contains: String
  playListName_not_contains: String
  playListName_starts_with: String
  playListName_not_starts_with: String
  playListName_ends_with: String
  playListName_not_ends_with: String
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  published: Boolean
  published_not: Boolean
  videos_every: VideoWhereInput
  videos_some: VideoWhereInput
  videos_none: VideoWhereInput
  AND: [PlayListBoxWhereInput!]
  OR: [PlayListBoxWhereInput!]
  NOT: [PlayListBoxWhereInput!]
}

input PlayListBoxWhereUniqueInput {
  id: ID
  playListName: String
}

type ProgramBox {
  id: ID!
  programName: String!
  imageUrl: String!
  published: Boolean
}

type ProgramBoxConnection {
  pageInfo: PageInfo!
  edges: [ProgramBoxEdge]!
  aggregate: AggregateProgramBox!
}

input ProgramBoxCreateInput {
  id: ID
  programName: String!
  imageUrl: String!
  published: Boolean
}

type ProgramBoxEdge {
  node: ProgramBox!
  cursor: String!
}

enum ProgramBoxOrderByInput {
  id_ASC
  id_DESC
  programName_ASC
  programName_DESC
  imageUrl_ASC
  imageUrl_DESC
  published_ASC
  published_DESC
}

type ProgramBoxPreviousValues {
  id: ID!
  programName: String!
  imageUrl: String!
  published: Boolean
}

type ProgramBoxSubscriptionPayload {
  mutation: MutationType!
  node: ProgramBox
  updatedFields: [String!]
  previousValues: ProgramBoxPreviousValues
}

input ProgramBoxSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProgramBoxWhereInput
  AND: [ProgramBoxSubscriptionWhereInput!]
  OR: [ProgramBoxSubscriptionWhereInput!]
  NOT: [ProgramBoxSubscriptionWhereInput!]
}

input ProgramBoxUpdateInput {
  programName: String
  imageUrl: String
  published: Boolean
}

input ProgramBoxUpdateManyMutationInput {
  programName: String
  imageUrl: String
  published: Boolean
}

input ProgramBoxWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  programName: String
  programName_not: String
  programName_in: [String!]
  programName_not_in: [String!]
  programName_lt: String
  programName_lte: String
  programName_gt: String
  programName_gte: String
  programName_contains: String
  programName_not_contains: String
  programName_starts_with: String
  programName_not_starts_with: String
  programName_ends_with: String
  programName_not_ends_with: String
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  published: Boolean
  published_not: Boolean
  AND: [ProgramBoxWhereInput!]
  OR: [ProgramBoxWhereInput!]
  NOT: [ProgramBoxWhereInput!]
}

input ProgramBoxWhereUniqueInput {
  id: ID
}

type Query {
  chat(where: ChatWhereUniqueInput!): Chat
  chats(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chat]!
  chatsConnection(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChatConnection!
  chatRoom(where: ChatRoomWhereUniqueInput!): ChatRoom
  chatRooms(where: ChatRoomWhereInput, orderBy: ChatRoomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ChatRoom]!
  chatRoomsConnection(where: ChatRoomWhereInput, orderBy: ChatRoomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChatRoomConnection!
  generationVideo(where: GenerationVideoWhereUniqueInput!): GenerationVideo
  generationVideos(where: GenerationVideoWhereInput, orderBy: GenerationVideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GenerationVideo]!
  generationVideosConnection(where: GenerationVideoWhereInput, orderBy: GenerationVideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GenerationVideoConnection!
  information(where: InformationWhereUniqueInput!): Information
  informations(where: InformationWhereInput, orderBy: InformationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Information]!
  informationsConnection(where: InformationWhereInput, orderBy: InformationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InformationConnection!
  mainView(where: MainViewWhereUniqueInput!): MainView
  mainViews(where: MainViewWhereInput, orderBy: MainViewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MainView]!
  mainViewsConnection(where: MainViewWhereInput, orderBy: MainViewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MainViewConnection!
  playListBox(where: PlayListBoxWhereUniqueInput!): PlayListBox
  playListBoxes(where: PlayListBoxWhereInput, orderBy: PlayListBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PlayListBox]!
  playListBoxesConnection(where: PlayListBoxWhereInput, orderBy: PlayListBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlayListBoxConnection!
  programBox(where: ProgramBoxWhereUniqueInput!): ProgramBox
  programBoxes(where: ProgramBoxWhereInput, orderBy: ProgramBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProgramBox]!
  programBoxesConnection(where: ProgramBoxWhereInput, orderBy: ProgramBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProgramBoxConnection!
  singerBox(where: SingerBoxWhereUniqueInput!): SingerBox
  singerBoxes(where: SingerBoxWhereInput, orderBy: SingerBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SingerBox]!
  singerBoxesConnection(where: SingerBoxWhereInput, orderBy: SingerBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SingerBoxConnection!
  video(where: VideoWhereUniqueInput!): Video
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  node(id: ID!): Node
}

type SingerBox {
  id: ID!
  singerName: String!
  imageUrl: String!
  published: Boolean
}

type SingerBoxConnection {
  pageInfo: PageInfo!
  edges: [SingerBoxEdge]!
  aggregate: AggregateSingerBox!
}

input SingerBoxCreateInput {
  id: ID
  singerName: String!
  imageUrl: String!
  published: Boolean
}

type SingerBoxEdge {
  node: SingerBox!
  cursor: String!
}

enum SingerBoxOrderByInput {
  id_ASC
  id_DESC
  singerName_ASC
  singerName_DESC
  imageUrl_ASC
  imageUrl_DESC
  published_ASC
  published_DESC
}

type SingerBoxPreviousValues {
  id: ID!
  singerName: String!
  imageUrl: String!
  published: Boolean
}

type SingerBoxSubscriptionPayload {
  mutation: MutationType!
  node: SingerBox
  updatedFields: [String!]
  previousValues: SingerBoxPreviousValues
}

input SingerBoxSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SingerBoxWhereInput
  AND: [SingerBoxSubscriptionWhereInput!]
  OR: [SingerBoxSubscriptionWhereInput!]
  NOT: [SingerBoxSubscriptionWhereInput!]
}

input SingerBoxUpdateInput {
  singerName: String
  imageUrl: String
  published: Boolean
}

input SingerBoxUpdateManyMutationInput {
  singerName: String
  imageUrl: String
  published: Boolean
}

input SingerBoxWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  singerName: String
  singerName_not: String
  singerName_in: [String!]
  singerName_not_in: [String!]
  singerName_lt: String
  singerName_lte: String
  singerName_gt: String
  singerName_gte: String
  singerName_contains: String
  singerName_not_contains: String
  singerName_starts_with: String
  singerName_not_starts_with: String
  singerName_ends_with: String
  singerName_not_ends_with: String
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  published: Boolean
  published_not: Boolean
  AND: [SingerBoxWhereInput!]
  OR: [SingerBoxWhereInput!]
  NOT: [SingerBoxWhereInput!]
}

input SingerBoxWhereUniqueInput {
  id: ID
}

type Subscription {
  chat(where: ChatSubscriptionWhereInput): ChatSubscriptionPayload
  chatRoom(where: ChatRoomSubscriptionWhereInput): ChatRoomSubscriptionPayload
  generationVideo(where: GenerationVideoSubscriptionWhereInput): GenerationVideoSubscriptionPayload
  information(where: InformationSubscriptionWhereInput): InformationSubscriptionPayload
  mainView(where: MainViewSubscriptionWhereInput): MainViewSubscriptionPayload
  playListBox(where: PlayListBoxSubscriptionWhereInput): PlayListBoxSubscriptionPayload
  programBox(where: ProgramBoxSubscriptionWhereInput): ProgramBoxSubscriptionPayload
  singerBox(where: SingerBoxSubscriptionWhereInput): SingerBoxSubscriptionPayload
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
}

type Video {
  id: ID!
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  playListBoxes(where: PlayListBoxWhereInput, orderBy: PlayListBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PlayListBox!]
  ranking: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type VideoConnection {
  pageInfo: PageInfo!
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  id: ID
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  playListBoxes: PlayListBoxCreateManyWithoutVideosInput
  ranking: Int
}

input VideoCreateManyWithoutPlayListBoxesInput {
  create: [VideoCreateWithoutPlayListBoxesInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateWithoutPlayListBoxesInput {
  id: ID
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  ranking: Int
}

type VideoEdge {
  node: Video!
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  division_ASC
  division_DESC
  program_ASC
  program_DESC
  duration_ASC
  duration_DESC
  singer_ASC
  singer_DESC
  thumbnail_ASC
  thumbnail_DESC
  title_ASC
  title_DESC
  videoId_ASC
  videoId_DESC
  publishedAt_ASC
  publishedAt_DESC
  mainRegister_ASC
  mainRegister_DESC
  album_ASC
  album_DESC
  songId_ASC
  songId_DESC
  releaseDate_ASC
  releaseDate_DESC
  like_ASC
  like_DESC
  popularity_ASC
  popularity_DESC
  singerAccuFactor_ASC
  singerAccuFactor_DESC
  ranking_ASC
  ranking_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VideoPreviousValues {
  id: ID!
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  ranking: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input VideoScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  division: String
  division_not: String
  division_in: [String!]
  division_not_in: [String!]
  division_lt: String
  division_lte: String
  division_gt: String
  division_gte: String
  division_contains: String
  division_not_contains: String
  division_starts_with: String
  division_not_starts_with: String
  division_ends_with: String
  division_not_ends_with: String
  program: String
  program_not: String
  program_in: [String!]
  program_not_in: [String!]
  program_lt: String
  program_lte: String
  program_gt: String
  program_gte: String
  program_contains: String
  program_not_contains: String
  program_starts_with: String
  program_not_starts_with: String
  program_ends_with: String
  program_not_ends_with: String
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  singer: String
  singer_not: String
  singer_in: [String!]
  singer_not_in: [String!]
  singer_lt: String
  singer_lte: String
  singer_gt: String
  singer_gte: String
  singer_contains: String
  singer_not_contains: String
  singer_starts_with: String
  singer_not_starts_with: String
  singer_ends_with: String
  singer_not_ends_with: String
  thumbnail: String
  thumbnail_not: String
  thumbnail_in: [String!]
  thumbnail_not_in: [String!]
  thumbnail_lt: String
  thumbnail_lte: String
  thumbnail_gt: String
  thumbnail_gte: String
  thumbnail_contains: String
  thumbnail_not_contains: String
  thumbnail_starts_with: String
  thumbnail_not_starts_with: String
  thumbnail_ends_with: String
  thumbnail_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  videoId: String
  videoId_not: String
  videoId_in: [String!]
  videoId_not_in: [String!]
  videoId_lt: String
  videoId_lte: String
  videoId_gt: String
  videoId_gte: String
  videoId_contains: String
  videoId_not_contains: String
  videoId_starts_with: String
  videoId_not_starts_with: String
  videoId_ends_with: String
  videoId_not_ends_with: String
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime!]
  publishedAt_not_in: [DateTime!]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  mainRegister: Boolean
  mainRegister_not: Boolean
  album: String
  album_not: String
  album_in: [String!]
  album_not_in: [String!]
  album_lt: String
  album_lte: String
  album_gt: String
  album_gte: String
  album_contains: String
  album_not_contains: String
  album_starts_with: String
  album_not_starts_with: String
  album_ends_with: String
  album_not_ends_with: String
  songId: String
  songId_not: String
  songId_in: [String!]
  songId_not_in: [String!]
  songId_lt: String
  songId_lte: String
  songId_gt: String
  songId_gte: String
  songId_contains: String
  songId_not_contains: String
  songId_starts_with: String
  songId_not_starts_with: String
  songId_ends_with: String
  songId_not_ends_with: String
  releaseDate: String
  releaseDate_not: String
  releaseDate_in: [String!]
  releaseDate_not_in: [String!]
  releaseDate_lt: String
  releaseDate_lte: String
  releaseDate_gt: String
  releaseDate_gte: String
  releaseDate_contains: String
  releaseDate_not_contains: String
  releaseDate_starts_with: String
  releaseDate_not_starts_with: String
  releaseDate_ends_with: String
  releaseDate_not_ends_with: String
  like: Int
  like_not: Int
  like_in: [Int!]
  like_not_in: [Int!]
  like_lt: Int
  like_lte: Int
  like_gt: Int
  like_gte: Int
  popularity: Int
  popularity_not: Int
  popularity_in: [Int!]
  popularity_not_in: [Int!]
  popularity_lt: Int
  popularity_lte: Int
  popularity_gt: Int
  popularity_gte: Int
  singerAccuFactor: Int
  singerAccuFactor_not: Int
  singerAccuFactor_in: [Int!]
  singerAccuFactor_not_in: [Int!]
  singerAccuFactor_lt: Int
  singerAccuFactor_lte: Int
  singerAccuFactor_gt: Int
  singerAccuFactor_gte: Int
  ranking: Int
  ranking_not: Int
  ranking_in: [Int!]
  ranking_not_in: [Int!]
  ranking_lt: Int
  ranking_lte: Int
  ranking_gt: Int
  ranking_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [VideoScalarWhereInput!]
  OR: [VideoScalarWhereInput!]
  NOT: [VideoScalarWhereInput!]
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
  AND: [VideoSubscriptionWhereInput!]
  OR: [VideoSubscriptionWhereInput!]
  NOT: [VideoSubscriptionWhereInput!]
}

input VideoUpdateInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  playListBoxes: PlayListBoxUpdateManyWithoutVideosInput
  ranking: Int
}

input VideoUpdateManyDataInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  ranking: Int
}

input VideoUpdateManyMutationInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  ranking: Int
}

input VideoUpdateManyWithoutPlayListBoxesInput {
  create: [VideoCreateWithoutPlayListBoxesInput!]
  delete: [VideoWhereUniqueInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutPlayListBoxesInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutPlayListBoxesInput!]
  deleteMany: [VideoScalarWhereInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithWhereNestedInput {
  where: VideoScalarWhereInput!
  data: VideoUpdateManyDataInput!
}

input VideoUpdateWithoutPlayListBoxesDataInput {
  division: String
  program: String
  duration: String
  singer: String
  thumbnail: String
  title: String
  videoId: String
  publishedAt: DateTime
  mainRegister: Boolean
  album: String
  songId: String
  releaseDate: String
  like: Int
  popularity: Int
  singerAccuFactor: Int
  ranking: Int
}

input VideoUpdateWithWhereUniqueWithoutPlayListBoxesInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutPlayListBoxesDataInput!
}

input VideoUpsertWithWhereUniqueWithoutPlayListBoxesInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutPlayListBoxesDataInput!
  create: VideoCreateWithoutPlayListBoxesInput!
}

input VideoWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  division: String
  division_not: String
  division_in: [String!]
  division_not_in: [String!]
  division_lt: String
  division_lte: String
  division_gt: String
  division_gte: String
  division_contains: String
  division_not_contains: String
  division_starts_with: String
  division_not_starts_with: String
  division_ends_with: String
  division_not_ends_with: String
  program: String
  program_not: String
  program_in: [String!]
  program_not_in: [String!]
  program_lt: String
  program_lte: String
  program_gt: String
  program_gte: String
  program_contains: String
  program_not_contains: String
  program_starts_with: String
  program_not_starts_with: String
  program_ends_with: String
  program_not_ends_with: String
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  singer: String
  singer_not: String
  singer_in: [String!]
  singer_not_in: [String!]
  singer_lt: String
  singer_lte: String
  singer_gt: String
  singer_gte: String
  singer_contains: String
  singer_not_contains: String
  singer_starts_with: String
  singer_not_starts_with: String
  singer_ends_with: String
  singer_not_ends_with: String
  thumbnail: String
  thumbnail_not: String
  thumbnail_in: [String!]
  thumbnail_not_in: [String!]
  thumbnail_lt: String
  thumbnail_lte: String
  thumbnail_gt: String
  thumbnail_gte: String
  thumbnail_contains: String
  thumbnail_not_contains: String
  thumbnail_starts_with: String
  thumbnail_not_starts_with: String
  thumbnail_ends_with: String
  thumbnail_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  videoId: String
  videoId_not: String
  videoId_in: [String!]
  videoId_not_in: [String!]
  videoId_lt: String
  videoId_lte: String
  videoId_gt: String
  videoId_gte: String
  videoId_contains: String
  videoId_not_contains: String
  videoId_starts_with: String
  videoId_not_starts_with: String
  videoId_ends_with: String
  videoId_not_ends_with: String
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime!]
  publishedAt_not_in: [DateTime!]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  mainRegister: Boolean
  mainRegister_not: Boolean
  album: String
  album_not: String
  album_in: [String!]
  album_not_in: [String!]
  album_lt: String
  album_lte: String
  album_gt: String
  album_gte: String
  album_contains: String
  album_not_contains: String
  album_starts_with: String
  album_not_starts_with: String
  album_ends_with: String
  album_not_ends_with: String
  songId: String
  songId_not: String
  songId_in: [String!]
  songId_not_in: [String!]
  songId_lt: String
  songId_lte: String
  songId_gt: String
  songId_gte: String
  songId_contains: String
  songId_not_contains: String
  songId_starts_with: String
  songId_not_starts_with: String
  songId_ends_with: String
  songId_not_ends_with: String
  releaseDate: String
  releaseDate_not: String
  releaseDate_in: [String!]
  releaseDate_not_in: [String!]
  releaseDate_lt: String
  releaseDate_lte: String
  releaseDate_gt: String
  releaseDate_gte: String
  releaseDate_contains: String
  releaseDate_not_contains: String
  releaseDate_starts_with: String
  releaseDate_not_starts_with: String
  releaseDate_ends_with: String
  releaseDate_not_ends_with: String
  like: Int
  like_not: Int
  like_in: [Int!]
  like_not_in: [Int!]
  like_lt: Int
  like_lte: Int
  like_gt: Int
  like_gte: Int
  popularity: Int
  popularity_not: Int
  popularity_in: [Int!]
  popularity_not_in: [Int!]
  popularity_lt: Int
  popularity_lte: Int
  popularity_gt: Int
  popularity_gte: Int
  singerAccuFactor: Int
  singerAccuFactor_not: Int
  singerAccuFactor_in: [Int!]
  singerAccuFactor_not_in: [Int!]
  singerAccuFactor_lt: Int
  singerAccuFactor_lte: Int
  singerAccuFactor_gt: Int
  singerAccuFactor_gte: Int
  playListBoxes_every: PlayListBoxWhereInput
  playListBoxes_some: PlayListBoxWhereInput
  playListBoxes_none: PlayListBoxWhereInput
  ranking: Int
  ranking_not: Int
  ranking_in: [Int!]
  ranking_not_in: [Int!]
  ranking_lt: Int
  ranking_lte: Int
  ranking_gt: Int
  ranking_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
}

input VideoWhereUniqueInput {
  id: ID
}
`
      }
    