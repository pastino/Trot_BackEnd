type Video {
  id: ID! @id 
  division: String,
  program: String,
  duration: String,
  singer: String,
  thumbnail: String,
  title: String, 
  videoId: String,
  publishedAt: DateTime,
  mainRegister: Boolean,
  album: String,
  songId: String,
  releaseDate: String,
  like: Int,
  popularity: Int,
  singerAccuFactor: Int,
  playListBoxes: [PlayListBox!]! @relation(name: "PlayListOfVideo")
  ranking: Int,
  createdAt: DateTime! @createdAt,
  updatedAt: DateTime! @updatedAt
}

type GenerationVideo {
  id: ID! @id 
  division: String,
  program: String,
  duration: String,
  singer: String,
  thumbnail: String,
  title: String,
  videoId: String,
  ranking: Int,
  publishedAt: DateTime,
  createdAt: DateTime! @createdAt,
  updatedAt: DateTime! @updatedAt
}

type MainView {
  id: ID! @id 
  division: String,
  program: String,
  duration: String,
  singer: String,
  thumbnail: String,
  title: String,
  videoId: String,
  ranking: Int,
  publishedAt: DateTime,
  createdAt: DateTime! @createdAt,
  updatedAt: DateTime! @updatedAt
}

type ProgramBox{
 id: ID! @id 
 programName: String!
 imageUrl: String!
 published: Boolean
}

type SingerBox{
 id: ID! @id 
 singerName: String!
 imageUrl: String!
 published: Boolean
}
  

type PlayListBox{
 id: ID! @id 
 playListName: String! @unique
 imageUrl: String!
 published: Boolean
 videos: [Video!]! @relation(name: "PlayListOfVideo")
}

type Information {
  id: ID! @id 
}

type Chat {
  id: ID! @id
  fcmToken: String
  nickName: String!
  avatar: String
  text: String!
  commentTargetId: String
  commentText: String
  commentNickName: String
  videoId: String
  thumbnail: String
  title: String
  singer: String
  duration: String
  delete: Boolean
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ChatRoom {
  id: ID! @id
  numOfVisitor: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
